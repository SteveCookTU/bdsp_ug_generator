name: Rust

on:
  release:
    types: [created]

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add rustfmt
      - run: cargo fmt -- --check

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      # cache the build assets so they dont recompile every time.
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          override: true
      - name: Install system dependencies
        run: |
          sudo apt-get update \
          && sudo apt-get install -y \
          libgtk-3-dev
      - name: Build & Package
        run: cargo build --all --features build-binary --release && mv target/release/bdsp_ug_generator target/release/bdsp-ug-generator && zip -j ${{ runner.OS }}.zip target/release/bdsp-ug-generator

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ runner.OS }}.zip

  build-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-apple-darwin
          default: true
          override: true

      - name: Build & Package
        run: cargo build --all --features build-binary --release && mv target/release/bdsp_ug_generator target/release/bdsp-ug-generator && 7z a -tzip ${{ runner.OS }}.zip ./target/release/bdsp-ug-generator

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ runner.OS }}.zip

  build-windows:
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-pc-windows-gnu
          default: true
          override: true

      - name: Build & Package
        run: cargo build --all --features build-binary --release && mv target/release/bdsp_ug_generator.exe target/release/bdsp-ug-generator.exe && 7z a -tzip ${{ runner.OS }}.zip ./target/release/bdsp-ug-generator.exe

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ runner.OS }}.zip